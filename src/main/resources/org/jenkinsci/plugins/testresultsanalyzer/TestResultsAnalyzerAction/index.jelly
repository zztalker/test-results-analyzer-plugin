<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout">
<l:layout title="Test Result Graph">
<st:include it="${it.project}" page="sidepanel.jelly" />
<st:bind var="remoteAction" value="${it}"/>
<l:main-panel>
<link href="${resURL}/plugin/test-results-analyzer/css/table-style.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/jquery/js/jquery-1.11.1.min.js"></script>

<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/handlebars-v2.0.0.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/highcharts.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/json3-min.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/highchart-exporting.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/highchart-offline-exporting.js"></script>

<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/testresult.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/chart-generator.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/test-result-analyzer-template.js"></script>
<script>

var $j = jQuery.noConflict();
</script>
<style type="text/css">
    .failed {
        background-color: ${it.failedColor};
    }

    .passed {
        background-color: ${it.passedColor};
    }

    .skipped{
        background-color: ${it.skippedColor};
    }

    .no_status{
        background-color: ${it.naColor};
    }
</style>
<j:set var="temp" value="${it.jsonLoadData}"/>
<j:set var="builds" value="${it.builds}"/>

<button id="settingsmenubutton">Options</button>
<div id="settingsmenu" style="display: none;">
	<table>
		<tr>
			<td>Number of builds to show:</td>
			<td>
				<input id="noofbuilds" type="number" value="${it.noOfBuilds}" min="1" step="1" disabled="${it.showAllBuilds}"/>
				(all: <input id="allnoofbuilds" type="checkbox" checked="${it.showAllBuilds}" />)
			</td>
		</tr>
		<tr>
			<td>Build filter, [A-B,C,!D,~RegExp] syntax allowed: </td>
			<td>
				<input id="build-filter" type="text" value=""/>
			</td>
		</tr>
		<tr>
			<td>Display run time for each test:</td>
			<td><input type="checkbox" id="show-build-durations" name="show-build-durations" checked="${it.showBuildTime}"/></td>
		</tr>
		<tr>
        	<td>Hide configuration methods (Only for TestNG results}</td>
        	<td><input type="checkbox" id="hide-config-methods" name="hide-config-methods" checked="${it.hideConfigurationMethods}"/></td>
        </tr>
		<tr>
			<td>Chart type:</td>
			<td>
				<input id="linegraph" type="checkbox" checked="${it.showLineGraph}" /> Line
				<input id="bargraph" type="checkbox" checked="${it.showBarGraph}" /> Bar
				<input id="piegraph" type="checkbox" checked="${it.showPieGraph}" /> Pie
			</td>
		</tr>
		<tr>
			<td>Chart Data Type:</td>
			<td>
				<select id="chartDataType">
					<option value="passfail">Passes/Failures</option>
					<option value="runtime">Test Runtimes</option>
				</select>
			</td>
		</tr>
	</table>
	<div>
		<button id="getbuildreport">Update</button>
	</div>
</div>
<div>
<button id="save_filter" >Save options</button>
<button id="load_filter" >Load options</button>
</div>
<button id="downloadCSV" >Download Test (CSV)</button>
Search: <input id="filter" class="table-filter" type="text" placeholder="Test/Class/Package"/>

<div class="extrabuttons">
	<button id="expandall">Expand All</button>
	<button id="collapseall">Collapse All</button>
</div>
<br/>
<div id="tree">
   <div id="table-loading" style="display: none;">
       <img src="${resURL}/plugin/test-results-analyzer/images/loading2.gif"/>
   </div>

   <div class="test-history-table table">

   </div>
   <br/>

   <div class="worst-tests-table">

   </div>
</div>
<br/>
<br/>

<div id="charts">
   <div id="linechart">

   </div>
   <br/>

   <div id="piechart">

   </div>
<br/>

   <div id="barchart">

   </div>

</div>
<div id="builddetail">

</div>

<script>
	var runtimeLowThreshold = "${it.runTimeLowThreshold}";
	var runtimeHighThreshold = "${it.runTimeHighThreshold}";
    var customStatuses = {
        'PASSED':'PASSED',
        'SKIPPED':'SKIPPED',
        'FAILED':'FAILED',
        'N/A':'N/A'
    }
	function generateCharts() {
		var chartType = {
			type: document.getElementById('chartDataType').value,
			line: document.getElementById('linegraph').checked,
			bar: document.getElementById('bargraph').checked,
			pie: document.getElementById('piegraph').checked,
		}
		generateChart(chartType);

		//fixes Jenkins issue where page content is not correctly placed until the window is resized
		window.dispatchEvent(new Event('resize'));
	}

    document.addEventListener("DOMContentLoaded", function(event) {
        document.getElementById('allnoofbuilds').checked = ${it.showAllBuilds};
        document.getElementById('show-build-durations').checked = ${it.showBuildTime};
        document.getElementById('hide-config-methods').checked = ${it.hideConfigurationMethods};
        document.getElementById('linegraph').checked = ${it.showLineGraph};
        document.getElementById('bargraph').checked = ${it.showBarGraph};
        document.getElementById('piegraph').checked = ${it.showPieGraph};
        document.getElementById('noofbuilds').disabled = ${it.showAllBuilds};
        if ("${it.chartDataType}" === "runtime") {
            document.getElementById('chartDataType').value = "runtime";
            document.getElementById('bargraph').disabled = true;
        }
        else {
            document.getElementById('chartDataType').value = "passfail";
        }

        document.querySelector('#build-filter').addEventListener('keydown', function(e) {
            if (e.keyCode === 13){
                populateTemplate();
            }
        });
        setCustomStatuses();
        populateTemplate();
    });

    document.querySelector('#filter').addEventListener('keyup', function(e) {
        if (e.keyCode === 13){
            searchTests();
        }
    });

	jQuery("#settingsmenubutton").click(function () {
		jQuery("#settingsmenu").slideToggle(400, function () {
			//fixes Jenkins issue where page content is not correctly placed until the window is resized
			window.dispatchEvent(new Event('resize'));
		});

		//fixes Jenkins issue where page content is not correctly placed until the window is resized
		window.dispatchEvent(new Event('resize'));
	});

	allnoofbuilds.onchange = () => document.getElementById('noofbuilds').disabled = document.getElementById('allnoofbuilds').checked

	chartDataType.onchange = () => document.getElementById('chartDataType').value == "runtime" ? document.getElementById('bargraph').disabled = "runtime" : document.getElementById('bargraph').disabled = ""

    downloadCSV.onclick = () => {
        var noOfBuilds = "-1";
        if (!document.getElementById('allnoofbuilds').checked)
            noOfBuilds = document.getElementById('noofbuilds').value;
        remoteAction.getExportCSV(displayValues, noOfBuilds, function(t) {
            download("Test Results.csv", t.responseObject());
        })
    }

    getbuildreport.onclick = () => {
        populateTemplate();
    }

    save_filter.onclick = () => remoteAction.saveBuildFilter(document.getElementById("noofbuilds").value != "" ? document.getElementById("noofbuilds").value : " ",
                                                             document.getElementById("build-filter").value != "" ? document.getElementById("build-filter").value : " ",
                                                             document.getElementById("show-build-durations").checked, document.getElementById("hide-config-methods").checked,
                                                             document.getElementById("linegraph").checked, document.getElementById("bargraph").checked,
                                                             document.getElementById("piegraph").checked);

    load_filter.onclick = () =>{
        remoteAction.readBuildFilter(function(t){
            var settings = t.responseObject().split("|")
            settings[0] != " " ? document.getElementById("noofbuilds").value = settings[0] : ""
            settings[1] != " " ? document.getElementById("build-filter").value = settings[1] : ""
            document.getElementById("show-build-durations").checked = (settings[2] === 'true')
            document.getElementById("hide-config-methods").checked = (settings[3] === 'true')
            document.getElementById("linegraph").checked = (settings[4] === 'true')
            document.getElementById("bargraph").checked = (settings[5] === 'true')
            document.getElementById("piegraph").checked = (settings[6] === 'true')
            populateTemplate();
        })
    }

    expandall.onclick = () => expandAll()
    collapseall.onclick = () => collapseAll()

    function setCustomStatuses(){
        customStatuses['PASSED'] = "${it.passedRepresentation}";
        customStatuses['SKIPPED'] = "${it.skippedRepresentation}";
        customStatuses['FAILED'] = "${it.failedRepresentation}";
        customStatuses['N/A'] = "${it.naRepresentation}";
    }

	function download(filename, text) {
		var element = document.createElement('a');
		element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
		element.setAttribute('download', filename);
		element.style.display = 'none';
		document.body.appendChild(element);
		element.click();
		document.body.removeChild(element);
	}
</script>
  </l:main-panel>
  </l:layout>
</j:jelly>
